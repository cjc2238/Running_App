p + scale_y_continuous(expand = c(1, 0))
p + scale_y_continuous(expand = c(1, 1))
p + scale_y_continuous(expand = c(0, 1))
p + scale_y_continuous(expand = c(.5, .5))
p <- ggplot(df, aes(time_stamp, miles)) + geom_point(colour=df$person) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point() +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=.5) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=5) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=3) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
df$day <- format(df$time_stamp, format='%w')
as.POSIXct(df$time_stamp, format='%d/%m/%Y %H:%M:%S')
df$day <- format(df$time_stamp, format='%w')
df$day <- format(df$time_stamp, format='%d')
df$day <- format(df$time_stamp, format='%d/%m')
as.POSIXct(df$time_stamp, format='%d/%m/%Y %H:%M:%S')
df$day <- df$time_stamp
df$day <- strftime(df$day, format = "%j")
as.numeric(doy)
as.numeric(df$day)
as.POSIXct(df$time_stamp, format='%d/%m/%Y %H:%M:%S')
df$day <- df$time_stamp
require(lubridate)
as.POSIXct(df$time_stamp, format='%d/%m/%Y %H:%M:%S')
df$day <- yday(df$time_stamp)
?yday
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
#
#
require(RCurl)
fileUrl <- "https://docs.google.com/spreadsheets/d/1RTRABrYQhyyfj_Dr3bkmNSnxmM7jbXIMgrI8eOa7Avk/export?format=csv"
fileCSV <- getURL(fileUrl,.opts=list(ssl.verifypeer=FALSE))
fileCSVDF <-  read.csv(textConnection(fileCSV))
df <- fileCSVDF[,c(1:5)]
## Data Manipulation
require(lubridate)
df$day <- yday(df$time_stamp)
## Plot Data
require(ggplot2)
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
require(lubridate)
df$day <- yday(df$time_stamp)
df$day <-difftime(df$time_stamp,as.POSIXct(as.Date("2015-01-01 00:00", tzone="GMT")),units='days')
df$day <-difftime(df$time_stamp,as.POSIXct(as.Date("2017-01-01 00:00", tzone="GMT")),units='days')
df$day <- yday(df$time_stamp)
df$day <-difftime(df$time_stamp,as.POSIXct(as.Date("2017-01-01 00:00", tzone="GMT")),units='days')
require(lubridate)
df$day <- yday(df$time_stamp)
df$day <-difftime(df$time_stamp,as.POSIXct(as.Date("2018-01-01 00:00", tzone="GMT")),units='days')
## Plot Data
df$day <-difftime(df$time_stamp,as.POSIXct(as.Date("01-01-2018 00:00", tzone="GMT")),units='days')
## Plot Data
require(ggplot2)
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
ggplot(df, aes(person, miles, colour=person))
ggplot(df, aes(person, miles, colour=person)) + geom_histogram(miles) +  xlab("") + ylab("Miles Ran")
ggplot(df, aes(person, miles, colour=person)) + geom_histogram(df$miles) +  xlab("") + ylab("Miles Ran")
ggplot(df, aes(person, miles, colour=person)) + geom_histogram() +  xlab("") + ylab("Miles Ran")
ggplot(df, aes(person, miles, colour=person)) + geom_histogram()
ggplot(df, aes(person, colour=person)) + geom_histogram()
?aes
?geom_histogram
ggplot(df, aes(person, colour=person)) + geom_histogram(stat = "count")
ggplot(df, aes(person, colour=person)) + geom_histogram(stat = "density")
plot(df$miles)
## Plot Data
require(ggplot2)
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
source('~/GitHub/Running_App/Vizualize progress.R')
require(RCurl)
fileUrl <- "https://docs.google.com/spreadsheets/d/1RTRABrYQhyyfj_Dr3bkmNSnxmM7jbXIMgrI8eOa7Avk/export?format=csv"
fileCSV <- getURL(fileUrl,.opts=list(ssl.verifypeer=FALSE))
fileCSVDF <-  read.csv(textConnection(fileCSV))
df <- fileCSVDF[,c(1:5)]
## Data Manipulation
## Plot Data
require(ggplot2)
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(.5, .5))
p + scale_y_continuous(expand = c(0, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_line(size=2) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(0, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(0, .5))
ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
ggplot(df, aes(time_stamp, miles, colour=person)) + geom_bar(size=2)
ggplot(df, aes(person, miles, colour=person)) + geom_bar(size=2)
ggplot(df, aes(person, miles, colour=person)) + geom_bar(size=2)
hist(df$miles)
hist(df)
ggplot(data=df, aes(df$miles)) + geom_histogram()
ggplot(data=df, aes(sum(df$miles))) + geom_histogram()
ggplot(data=df, aes(sum(df$miles), colour=person)) + geom_histogram()
ggplot(data=df, aes(sum(df$miles), person, colour=person)) + geom_histogram()
df1 <- tapply(df$miles, df$person, FUN=sum)
df1 <- as.data.frame(tapply(df$miles, df$person, FUN=sum))
View(df1)
plot(df1)
hist(df1)
hist(df1$`tapply(df$miles, df$person, FUN = sum)`)
barplot(df1)
barplot(df1$`tapply(df$miles, df$person, FUN = sum)`)
ggplot(df, aes(df1$`tapply(df$miles, df$person, FUN = sum)`)) + geom_bar()
ggplot(df1, aes(df1$`tapply(df$miles, df$person, FUN = sum)`)) + geom_bar()
df1 <- aggregate(df$miles, by=list(Category=df$person), FUN=sum)
df1[,2] <- "miles"
df1[,2] <- names("miles")
df1 <- aggregate(df$miles, by=list(Category=df$person), FUN=sum)
df1[,2] <- names("miles")
df1 <- aggregate(df$miles, by=list(Category=df$person), FUN=sum)
df1 <- aggregate(df$miles, by=list(Category=df$person), FUN=sum)
colnames(df1) <- c("person","miles")
ggplot(df1, aes(miles, colour=person)) + geom_bar()
ggplot(df1, aes(person, miles, colour=person)) + geom_bar()
ggplot(df1, aes(person, colour=person)) + geom_bar()
ggplot(df1, aes(person, colour=person)) + geom_bar(stat = "sum")
ggplot(df1, aes(miles, colour=person)) + geom_histogram()
ggplot(df1, aes(miles, colour=person)) + geom_bar(stat="bin")
ggplot(df1, aes(miles, colour=person))
ggplot(df1, aes(person, miles, colour=person))
ggplot(df1, aes(person, miles, colour=person)) + geom_area()
ggplot(df1, aes(person, miles, colour=person)) + geom_bar()
ggplot(df1, aes(person, miles, colour=person)) + geom_histogram()
ggplot(df1, aes(person, miles, colour=person)) + geom_point()
ggplot(df1, aes(person, miles, colour=person)) + geom_line()
ggplot(data = df, aes(person, miles)) + stat_summary(fun.y = sum, geom = "bar")
ggplot(data = df, aes(person, miles)) + stat_summary(fun.y = sum, geom = "bar") +  xlab("Person") + ylab("Total Miles Ran")
ggplot(data = df, aes(person, miles, colour=person)) + stat_summary(fun.y = sum, geom = "bar") +  xlab("Person") + ylab("Total Miles Ran")
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") +  xlab("Person") + ylab("Total Miles Ran")
require(ggplot2)
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(0, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) +  xlab("Date") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(0, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person)) +  xlab("Date") + ylab("Miles Ran")
p + scale_y_continuous(expand = c(0, .5))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
require(ggplot2)
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person)) + labs(list(title = "Time Series of Running Data", x = "Date", y = "Total Miles Ran"))
p + scale_y_continuous(expand = c(0, .5))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=2) + labs(list(title = "Time Series of Running Data", x = "Date", y = "Total Miles Ran"))
p + scale_y_continuous(expand = c(0, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=.5) + labs(list(title = "Time Series of Running Data", x = "Date", y = "Total Miles Ran"))
p + scale_y_continuous(expand = c(0, .5))
p <- ggplot(df, aes(time_stamp, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Date", y = "Total Miles Ran"))
p + scale_y_continuous(expand = c(0, .5))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran", label=miles))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran", label=df$miles))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar", stat="identity") + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + geom_bar(stat="identity") labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + geom_bar(stat="identity") + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + geom_text(aes(label=df$miles), vjust=0) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
df1 <- aggregate(df$miles, by=list(Category=df$person), FUN=sum)
ggplot(data = df, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + geom_text(aes(label=df1$x), vjust=0) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
df1 <- aggregate(df$miles, by=list(person=df$person), FUN=sum)
colnames(df1) <- c("person","miles")
ggplot(data = df1, aes(person, miles, fill=person)) + stat_summary(fun.y = sum, geom = "bar") + geom_text(aes(label=df1$x), vjust=0) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar() + geom_text(aes(label=df1$x), vjust=0) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar() + geom_text(aes(label=df1$miles), vjust=0) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=0) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=1) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=2) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=5) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=3) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=4) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Miles Ran"))
source('~/GitHub/Running_App/Vizualize progress.R')
print(total_time_series)
print(person_time_series)
print(totals)
source('~/GitHub/Running_App/Vizualize progress.R')
print(person_time_series)
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + theme_bw()
print(person_time_series)
print(person_time_series)
person_time_series <- p + scale_y_continuous(expand = c(0, .5))
print(person_time_series)
p <- ggplot(df2, aes(day, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran"))
person_time_series <- p + scale_y_continuous(expand = c(0, .5))
print(person_time_series)
p <- ggplot(df2, aes(day, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5))
print(person_time_series)
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
print(person_time_series)
print(total_time_series)
total_time_series + geom_smooth()
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 1.55, y = 6, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 1.65, y = 5.8, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 1.35, y = 6, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 1.65, y = 5.8, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 1.55, y = 6.5, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 1.65, y = 5.8, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 1.55, y = 6.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 1.65, y = 5.8, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
totals <- ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=4) + labs(list(title = "Total Miles Accomplished Per Person in 2017", x = "Person", y = "Total Distance Ran (miles)")) + theme_bw()
print(totals)
require(gridExtra)
grid.arrange(total_time_series, totals, ncol=2)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 1.55, y = 6.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 1.55, y = 5.8, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
totals <- ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=4) + labs(list(title = "Total Miles Accomplished Per Person in 2017", x = "Person", y = "Total Distance Ran (miles)")) + theme_bw()
print(totals)
require(gridExtra)
grid.arrange(total_time_series, totals, ncol=2)
total_time_series + geom_smooth()
total_time_series + geom_smooth(size=2)
total_time_series + geom_smooth(size=1)
total_time_series + geom_smooth(size=.5)
total_time_series + geom_smooth(size=.1)
total_time_series + geom_smooth(size=.8)
total_time_series + geom_smooth(size=.1)
total_time_series + geom_smooth(size=.5)
total_time_series + geom_smooth(size=10)
total_time_series + geom_smooth(size=1)
source('~/GitHub/Running_App/Vizualize progress.R')
total_time_series + geom_smooth(size=1)
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
total_time_series
View(df)
View(df2)
View(df3)
View(df2)
View(df1)
View(df)
total_time_series +  + geom_hline(yintercept = mean(df$miles)
total_time_series +  + geom_hline(yintercept = mean(df$miles))
total_time_series +  + geom_hline(yintercept = mean(df3$miles))
View(df3)
source('~/GitHub/Running_App/Vizualize progress.R')
source('~/GitHub/Running_App/Vizualize progress.R')
print(person_time_series)
View(df3)
View(df1)
View(df)
p <- ggplot(df, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5))
print(person_time_series)
df4 <- aggregate(df$miles, by=list(week=df$week), FUN=sum)
colnames(df3) <- c("week","miles")
View(df4)
df4 <- aggregate(df$miles, by=list(person=df$person, week=df$week), FUN=sum)
colnames(df3) <- c("week","miles")
df3 <- aggregate(df$miles, by=list(yday=df$yday), FUN=sum)
colnames(df3) <- c("day","miles")
df4 <- aggregate(df$miles, by=list(person=df$person, week=df$week), FUN=sum)
colnames(df4) <- c("person", "week","miles")
p <- ggplot(df3, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
p <- ggplot(df2, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
p <- ggplot(df3, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5))
print(person_time_series)
p <- ggplot(df3, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5))
print(person_time_series)
df4$week[df4$week == 00] <- 01
View(df4)
df4$week[df4$week == '00'] <- '01'
require(ggplot2)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5))
print(person_time_series)
df$week[df$week == '00'] <- '01'
df1 <- aggregate(df$miles, by=list(person=df$person), FUN=sum)
colnames(df1) <- c("person","miles")
df2 <- aggregate(df$miles, by=list(person=df$person, day=df$yday), FUN=sum)
colnames(df2) <- c("person","day","miles")
df3 <- aggregate(df$miles, by=list(yday=df$yday), FUN=sum)
colnames(df3) <- c("day","miles")
df4 <- aggregate(df$miles, by=list(person=df$person, week=df$week), FUN=sum)
colnames(df4) <- c("person", "week","miles")
require(ggplot2)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Day of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5))
print(person_time_series)
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 1, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 1, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .5, y = 10.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .5, y = 9.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 1, y = 11.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 1, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 11.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", hjust = 0.5, x = "Week of Year", y = "Total Miles Ran")) + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red")
print(person_time_series)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red") + theme(plot.title = element_text(hjust = 0.5))
print(person_time_series)
p <- ggplot(df3, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
totals <- ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=4) + labs(list(title = "Total Miles Accomplished Per Person in 2017", x = "Person", y = "Total Distance Ran (miles)")) + theme_bw()
print(totals)
require(gridExtra)
grid.arrange(total_time_series, totals, ncol=1)
grid.arrange(total_time_series, person_time_series, totals, ncol=1)
source('~/GitHub/Running_App/ShinyCode.R')
library(shiny)
library(shiny)
library(googlesheets)
library(RCurl)
fileUrl <- "https://docs.google.com/spreadsheets/d/1RTRABrYQhyyfj_Dr3bkmNSnxmM7jbXIMgrI8eOa7Avk/export?format=csv"
fileCSV <- getURL(fileUrl,.opts=list(ssl.verifypeer=FALSE))
fileCSVDF <-  read.csv(textConnection(fileCSV))
df <- fileCSVDF[,c(1:5)]
View(df)
View(fileCSVDF)
df <- fileCSVDF[,c(1:5)]
View(df)
df1 <- aggregate(df$miles, by=list(person=df$person), FUN=sum)
colnames(df1) <- c("person","miles")
View(df1)
if (interactive()) {
ui <- fluidPage(
sliderInput("obs", "Number of observations", 0, 1000, 500),
actionButton("goButton", "Go!"),
plotOutput("distPlot")
)
server <- function(input, output) {
output$distPlot <- renderPlot({
# Take a dependency on input$goButton. This will run once initially,
# because the value changes from NULL to 0.
input$goButton
# Use isolate() to avoid dependency on input$obs
dist <- ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=4) + labs(list(title = "Total Miles Ran Per Person in 2017", x = "Person", y = "Total Distance Ran (miles)"))
})
}
shinyApp(ui, server)
}
setwd("~/GitHub/Running_App/app")
runApp()
setwd("~/GitHub/Running_App/app")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/GitHub/Running_App/ShinyCode.R')
runApp('~/GitHub/Running_App/ShinyCode.R')
runApp('~/GitHub/Running_App/ShinyCode.R')
View(df)
runApp('~/GitHub/Running_App/ShinyCode.R')
View(df)
runApp('~/GitHub/Running_App/ShinyCode.R')
p <- ggplot(df3, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5)
source('~/GitHub/Running_App/Vizualize progress.R')
p <- ggplot(df3, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
View(df3)
View(df)
require(RCurl)
fileUrl <- "https://docs.google.com/spreadsheets/d/1RTRABrYQhyyfj_Dr3bkmNSnxmM7jbXIMgrI8eOa7Avk/export?format=csv"
fileCSV <- getURL(fileUrl,.opts=list(ssl.verifypeer=FALSE))
fileCSVDF <-  read.csv(textConnection(fileCSV))
df <- fileCSVDF[,c(1:5)]
require(lubridate)
x <- as.POSIXct(df$time_stamp, format='%m/%d/%Y %H:%M:%OS')
df$run_time <- as.POSIXct(df$run_time, format='%H:%M:%OS')
df$run_time <- format(df$run_time, format='%H:%M:%OS')
df$week <- format(x, format='%W')
df$yday <- yday(x)
df$week[df$week == '00'] <- '01'
df1 <- aggregate(df$miles, by=list(person=df$person), FUN=sum)
colnames(df1) <- c("person","miles")
df2 <- aggregate(df$miles, by=list(person=df$person, day=df$yday), FUN=sum)
colnames(df2) <- c("person","day","miles")
df3 <- aggregate(df$miles, by=list(yday=df$yday), FUN=sum)
colnames(df3) <- c("day","miles")
df4 <- aggregate(df$miles, by=list(person=df$person, week=df$week), FUN=sum)
colnames(df4) <- c("person", "week","miles")
require(ggplot2)
p <- ggplot(df4, aes(week, miles, colour=person)) + geom_point(size=2) + geom_line(aes(colour=person, group=person), size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + theme_bw()
person_time_series <- p + scale_y_continuous(expand = c(0, .5)) + geom_hline(yintercept = 9.697, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = .75, y = 10.75, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = .75, y = 10.25, label = "Meet Year Goal", size = 3, colour = "red") + theme(plot.title = element_text(hjust = 0.5))
print(person_time_series)
p <- ggplot(df3, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5)
total_time_series <- p + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
print(total_time_series)
totals <- ggplot(data = df1, aes(person, miles, fill=person)) + geom_bar(stat = "identity") + geom_text(aes(label=df1$miles), vjust=2, size=4) + labs(list(title = "Total Miles Accomplished Per Person in 2017", x = "Person", y = "Total Distance Ran (miles)")) + theme_bw()
print(totals)
require(gridExtra)
setwd("~/GitHub/Running_App")
runApp('ShinyCode.R')
library(shiny)
library(googlesheets)
library(RCurl)
require(lubridate)
fileUrl <- "https://docs.google.com/spreadsheets/d/1RTRABrYQhyyfj_Dr3bkmNSnxmM7jbXIMgrI8eOa7Avk/export?format=csv"
fileCSV <- getURL(fileUrl,.opts=list(ssl.verifypeer=FALSE))
fileCSVDF <-  read.csv(textConnection(fileCSV))
df <- fileCSVDF[,c(1:5)]
#########################
### Data Manipulation ###
#########################
## create time values ##
x <- as.POSIXct(df$time_stamp, format='%m/%d/%Y %H:%M:%OS')
df$run_time <- as.POSIXct(df$run_time, format='%H:%M:%OS')
df$run_time <- format(df$run_time, format='%H:%M:%OS')
df$week <- format(x, format='%W')
df$yday <- yday(x)
df$week[df$week == '00'] <- '01'
## All time sum of totals ##
df1 <- aggregate(df$miles, by=list(person=df$person), FUN=sum)
colnames(df1) <- c("person","miles")
## Sum of miles per person per day ##
df2 <- aggregate(df$miles, by=list(person=df$person, day=df$yday), FUN=sum)
colnames(df2) <- c("person","day","miles")
df3 <- aggregate(df$miles, by=list(yday=df$yday), FUN=sum)
colnames(df3) <- c("day","miles")
df4 <- aggregate(df$miles, by=list(person=df$person, week=df$week), FUN=sum)
colnames(df4) <- c("person", "week","miles")
View(df)
View(df1)
View(df2)
View(df3)
View(df4)
runApp()
runApp()
runApp()
pie(df$miles, labels = names(df$person))
pie(df2$miles, labels = names(df2$person))
pie(df1$miles, labels = names(df1$person))
pie(df1$miles, labels = df1$person)
pie(df1$miles, labels = percent, col = df1$person)
piepercent<- round(100*df1$miles/sum(df1$miles), 1)
pie(df1$miles, labels = percent, col = df1$person)
percent<- round(100*df1$miles/sum(df1$miles), 1)
pie(df1$miles, labels = percent, col = df1$person)
legend("topright", c("London","New York","Singapore","Mumbai"), cex = 0.8,
fill = rainbow(length(x)))
legend("topright", df1$person, cex = 0.8,
fill = rainbow(length(x)))
pie(df1$miles, labels = percent, col = df1$person)
legend("topright", df1$person, cex = 0.8,
fill = rainbow(length(x)))
pie(df1$miles, labels = percent)
?checkboxGroupInput
?selectInput()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(df3, aes(day, miles, label=miles)) + geom_point(size=2) + geom_line(size=1) + labs(list(title = "Time Series of Running Data", x = "Week of Year", y = "Total Miles Ran")) + geom_text(aes(label=miles),hjust=-0, vjust=-.5) + geom_hline(yintercept = 5.526, colour = "red", size = .8, linetype = "dotted") + annotate("text", x = 0, y = 7.25, label = "Min Needed to", size = 3, colour = "red") + annotate("text", x = 0, y = 6.25, label = "Meet Year Goal", size = 3, colour = "red") + theme_bw()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
